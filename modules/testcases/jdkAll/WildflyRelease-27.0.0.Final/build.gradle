apply plugin: 'java'
apply from: "dependencies.gradle"


group = 'org.jboss'
version = '1.0.3.Final'

description = "WildflyRelease-27.0.0.Final additional testsuite: additional testsuite for WildflyRelease-27.0.0.Final"

if(project.hasProperty('moduleName') && (project.getProperty('moduleName')=="basic")){

    dependencies{
        implementation project(':modules:testcases:jdkAll:WildflyRelease-27.0.0.Final:basic')
    }

}
else if(project.hasProperty('moduleName') && (project.getProperty('moduleName')=="core")){

    dependencies{
        implementation project(':modules:testcases:jdkAll:WildflyRelease-27.0.0.Final:core')
    }

}
else if(project.hasProperty('moduleName') && (project.getProperty('moduleName')=="ejb")){
    
    dependencies{
        implementation project(':modules:testcases:jdkAll:WildflyRelease-27.0.0.Final:ejb')
    }
    
}
else if(project.hasProperty('moduleName') && (project.getProperty('moduleName')=="elytron")){
    
    dependencies{
        implementation project(':modules:testcases:jdkAll:WildflyRelease-27.0.0.Final:elytron')
    }
    
}
else if(project.hasProperty('moduleName') && (project.getProperty('moduleName')=="clustering")){
    
    dependencies{
        implementation project(':modules:testcases:jdkAll:WildflyRelease-27.0.0.Final:clustering')
    }
    
}
else if(project.hasProperty('moduleName') && (project.getProperty('moduleName')=="infinispan")){
    
    dependencies{
        implementation project(':modules:testcases:jdkAll:WildflyRelease-27.0.0.Final:infinispan')
    }
    
}
else if(project.hasProperty('moduleName') && (project.getProperty('moduleName')=="domain")){
    
    dependencies{
        implementation project(':modules:testcases:jdkAll:WildflyRelease-27.0.0.Final:domain')
    }
    
}
else if(project.hasProperty('moduleName') && (project.getProperty('moduleName')=="domain_management")){
    
    dependencies{
        implementation project(':modules:testcases:jdkAll:WildflyRelease-27.0.0.Final:domain_management')
    }
    
}
else if(project.hasProperty('moduleName') && (project.getProperty('moduleName')=="jaxrs")){
    
    dependencies{
        implementation project(':modules:testcases:jdkAll:WildflyRelease-27.0.0.Final:jaxrs')
    }
    
}
else if(project.hasProperty('moduleName') && (project.getProperty('moduleName')=="logging")){
    
    dependencies{
        implementation project(':modules:testcases:jdkAll:WildflyRelease-27.0.0.Final:logging')
    }
    
}
else if(project.hasProperty('moduleName') && (project.getProperty('moduleName')=="management")){
    
    dependencies{
        implementation project(':modules:testcases:jdkAll:WildflyRelease-27.0.0.Final:management')
    }
    
}
else if(project.hasProperty('moduleName') && (project.getProperty('moduleName')=="manualmode")){
    
    dependencies{
        implementation project(':modules:testcases:jdkAll:WildflyRelease-27.0.0.Final:manualmode')
    }
    
}
else if(project.hasProperty('moduleName') && (project.getProperty('moduleName')=="messaging")){
    
    dependencies{
        implementation project(':modules:testcases:jdkAll:WildflyRelease-27.0.0.Final:messaging')
    }
    
}
else if(project.hasProperty('moduleName') && (project.getProperty('moduleName')=="microprofile")){
    
    dependencies{
        implementation project(':modules:testcases:jdkAll:WildflyRelease-27.0.0.Final:microprofile')
    }
    
}
else if(project.hasProperty('moduleName') && (project.getProperty('moduleName')=="others")){
    
    dependencies{
        implementation project(':modules:testcases:jdkAll:WildflyRelease-27.0.0.Final:others')
    }
    
}
else if(project.hasProperty('moduleName') && (project.getProperty('moduleName')=="remoting")){
    
    dependencies{
        implementation project(':modules:testcases:jdkAll:WildflyRelease-27.0.0.Final:remoting')
    }
    
}
else if(project.hasProperty('moduleName') && (project.getProperty('moduleName')=="security")){
    
    dependencies{
        implementation project(':modules:testcases:jdkAll:WildflyRelease-27.0.0.Final:security')
    }
    
}
else if(project.hasProperty('moduleName') && (project.getProperty('moduleName')=="server")){
    
    dependencies{
        implementation project(':modules:testcases:jdkAll:WildflyRelease-27.0.0.Final:server')
    }
    
}
else if(project.hasProperty('moduleName') && (project.getProperty('moduleName')=="web")){
    
    dependencies{
        implementation project(':modules:testcases:jdkAll:WildflyRelease-27.0.0.Final:web')
    }
    
}
else if(project.hasProperty('moduleName') && (project.getProperty('moduleName')=="weld")){
    
    dependencies{
        implementation project(':modules:testcases:jdkAll:WildflyRelease-27.0.0.Final:weld')
    }
    
}
else if(project.hasProperty('moduleName') && (project.getProperty('moduleName')=="jpa")){
    
    dependencies{
        implementation project(':modules:testcases:jdkAll:WildflyRelease-27.0.0.Final:jpa')
    }
    
}
else if(project.hasProperty('moduleName') && (project.getProperty('moduleName')=="manualserver")){
    
    dependencies{
        implementation project(':modules:testcases:jdkAll:WildflyRelease-27.0.0.Final:manualserver')
    }
    
}
else if(project.hasProperty('moduleName') && (project.getProperty('moduleName')=="spring")){
    
    dependencies{
        implementation project(':modules:testcases:jdkAll:WildflyRelease-27.0.0.Final:spring')
    }
    
}
else if(project.hasProperty('moduleName') && (project.getProperty('moduleName')=="all")){
    
    dependencies{
        implementation project(':modules:testcases:jdkAll:WildflyRelease-27.0.0.Final:basic')
        implementation project(':modules:testcases:jdkAll:WildflyRelease-27.0.0.Final:core')
        implementation project(':modules:testcases:jdkAll:WildflyRelease-27.0.0.Final:elytron')
        implementation project(':modules:testcases:jdkAll:WildflyRelease-27.0.0.Final:jpa')
        implementation project(':modules:testcases:jdkAll:WildflyRelease-27.0.0.Final:jmx')
        implementation project(':modules:testcases:jdkAll:WildflyRelease-27.0.0.Final:jaxrs')
        implementation project(':modules:testcases:jdkAll:WildflyRelease-27.0.0.Final:clustering')
        implementation project(':modules:testcases:jdkAll:WildflyRelease-27.0.0.Final:infinispan')
        implementation project(':modules:testcases:jdkAll:WildflyRelease-27.0.0.Final:logging')
        implementation project(':modules:testcases:jdkAll:WildflyRelease-27.0.0.Final:domain')
        implementation project(':modules:testcases:jdkAll:WildflyRelease-27.0.0.Final:domain_management')
        implementation project(':modules:testcases:jdkAll:WildflyRelease-27.0.0.Final:management')
        implementation project(':modules:testcases:jdkAll:WildflyRelease-27.0.0.Final:manualmode')
        implementation project(':modules:testcases:jdkAll:WildflyRelease-27.0.0.Final:messaging')
        implementation project(':modules:testcases:jdkAll:WildflyRelease-27.0.0.Final:microprofile')
        implementation project(':modules:testcases:jdkAll:WildflyRelease-27.0.0.Final:others')
        implementation project(':modules:testcases:jdkAll:WildflyRelease-27.0.0.Final:remoting')
        implementation project(':modules:testcases:jdkAll:WildflyRelease-27.0.0.Final:security')
        implementation project(':modules:testcases:jdkAll:WildflyRelease-27.0.0.Final:server')
        implementation project(':modules:testcases:jdkAll:WildflyRelease-27.0.0.Final:spring')
        implementation project(':modules:testcases:jdkAll:WildflyRelease-27.0.0.Final:web')
        implementation project(':modules:testcases:jdkAll:WildflyRelease-27.0.0.Final:weld')
        implementation project(':modules:testcases:jdkAll:WildflyRelease-27.0.0.Final:ejb')
    }

}
