<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
    <artifactId>testClusterDublicateServiceException</artifactId>
    <groupId>org.jboss.metrics</groupId>
    <version>1.0.3.Final-SNAPSHOT</version>
  </parent>

    <groupId>org.jboss.metrics</groupId>
    <artifactId>testClusterDublicateServiceException2-ejb</artifactId>
    <version>1.0.3.Final-SNAPSHOT</version>
    <packaging>ejb</packaging>

    <name>testClusterDublicateServiceException2-ejb</name>

    <properties>
        <endorsed.dir>${project.build.directory}/endorsed</endorsed.dir>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <version.ejb.plugin>2.3</version.ejb.plugin>
       <version.wildfly>10.0.0.CR4</version.wildfly>
        <version.jboss.spec.javaee.7.0>1.0.3.Final</version.jboss.spec.javaee.7.0>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- Define the version of JBoss' Java EE 6 APIs we want to import. 
                Any dependencies from org.jboss.spec will have their version defined by this 
                BOM -->
            <!-- JBoss distributes a complete set of Java EE 6 APIs including a Bill 
                of Materials (BOM). A BOM specifies the versions of a "stack" (or a collection) 
                of artifacts. We use this here so that we always get the correct versions 
                of artifacts. Here we use the jboss-javaee-6.0 stack (you can read this as 
                the JBoss stack of the Java EE 6 APIs). You can actually use this stack with 
                any version of JBoss EAP that implements Java EE 6. -->
           <dependency>
              <groupId>org.jboss.spec</groupId>
              <artifactId>jboss-javaee-7.0</artifactId>
              <version>${version.jboss.spec.javaee.7.0}</version>
              <type>pom</type>
              <scope>import</scope>
          </dependency>
            <dependency>
              <groupId>org.wildfly</groupId>
              <artifactId>wildfly-ejb-client-bom</artifactId>
              <version>${version.wildfly}</version>
              <scope>import</scope>
              <type>pom</type>
          </dependency>
        </dependencies>
    </dependencyManagement>
     <!-- As this is deployed as a jar, there is no need to mark dependencies 
        as provided, as they won't be packaged anyway -->
    <dependencies>
        <!-- Import MSC, to allow us to write WildFly services -->
        <dependency>
            <groupId>org.jboss.msc</groupId>
            <artifactId>jboss-msc</artifactId>
        </dependency>
        <!-- Import the EJB 3.1 API, we use provided scope because we aren't
            to use the version in WildFly -->
        <dependency>
            <groupId>org.jboss.spec.javax.ejb</groupId>
            <artifactId>jboss-ejb-api_3.2_spec</artifactId>
        </dependency>
        <!-- Import the JSR-250 API, we use provided scope because we aren't
            to use the version in WildFly -->
        <dependency>
            <groupId>org.jboss.spec.javax.annotation</groupId>
            <artifactId>jboss-annotations-api_1.2_spec</artifactId>
        </dependency>

        <!-- Import JBoss EAP Clustering Singleton, to allow us to create
                    a singleton service -->
        <dependency>
            <groupId>org.wildfly</groupId>
            <artifactId>wildfly-clustering-singleton-api</artifactId>
        </dependency>
        
        <dependency>
            <groupId>org.jboss.logging</groupId>
            <artifactId>jboss-logging</artifactId>
            <version>3.3.0.Final</version>
        </dependency>

    </dependencies>

    <build>
        <!-- Specify the artifact name -->
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <!-- must include ejb-plugin to change the EJB version from 
                    2.1 to 3.0 -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-ejb-plugin</artifactId>
                <version>${version.ejb.plugin}</version>
                <configuration>
                    <ejbVersion>3.1</ejbVersion>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.source}</target>
                    <generateClient>true</generateClient>
                    <clientIncludes>
                        <clientInclude>**/ServiceAccess.class</clientInclude>
                    </clientIncludes>
                    <archive>
                        <addMavenDescriptor>false</addMavenDescriptor>
                        <manifestEntries>
                            <Dependencies>org.jboss.msc,
                                org.wildfly.clustering.singleton,
                                org.jboss.as.server
                            </Dependencies>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
            <!-- WildFly plugin to deploy jar -->
            <plugin>
                <groupId>org.wildfly.plugins</groupId>
                <artifactId>wildfly-maven-plugin</artifactId>
                <configuration>
                    <skip>false</skip>
                    <filename>wildfly-cluster-ha-singleton-service.jar</filename>
                </configuration>
            </plugin>

        </plugins>
    </build>
</project>
